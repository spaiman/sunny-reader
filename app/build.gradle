apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.setiawanpaiman.sunnyreader"
        minSdkVersion 14
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        buildConfigField 'String', 'BASE_URL_API', '\"https://hacker-news.firebaseio.com\"'
        testInstrumentationRunner "com.setiawanpaiman.sunnyreader.runner.MockAndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
    testOptions.unitTests.includeAndroidResources = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    jacocoClasspath = configurations['jacocoAnt']

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      'com/setiawanpaiman/sunnyreader/di/**',
                      'com/setiawanpaiman/sunnyreader/domain/api/**',
                      'com/raizlabs/**',
                      '**/*_Adapter*.*',
                      '**/*_Table*.*',
                      '**/*_Database*.*',
                      '**/*$ViewBinder*.*',
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree]))
    getExecutionData().setFrom(files(["${buildDir}/jacoco/testDebugUnitTest.exec",
                           "${buildDir}/outputs/code-coverage/connected/coverage.ec"
    ]))
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
    onlyIf { System.env.'CI' }
}

ext {
    androidXVersion = [
            annotations: "1.2.0",
            appCompat: "1.3.1",
            cardView: "1.0.0",
            legacySupport: "1.0.0",
            material: "1.4.0",
            recyclerView: "1.2.1"
    ]
    androidXTestVersion = [
            core: "1.4.0",
            espresso: "3.4.0",
            junit: "1.1.3",
            rules: "1.1.1",
    ]
    retrofitVersion = "2.9.0"
    daggerVersion = "2.38.1"
    dbFlowVersion = "3.0.0"
    butterKnifeVersion = "8.0.0"
    okHttpVersion = "3.2.0"
    robolectricVersion = "4.2.1"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:${androidXTestVersion.core}"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"

    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    androidTestImplementation "org.hamcrest:hamcrest-library:1.3"
    androidTestImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker:1.4"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-dx:1.4"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-mockito:1.4"
    androidTestImplementation "androidx.appcompat:appcompat:${androidXVersion.appCompat}"
    androidTestImplementation "com.google.android.material:material:${androidXVersion.material}"
    androidTestImplementation "androidx.recyclerview:recyclerview:${androidXVersion.recyclerView}"
    androidTestImplementation "androidx.legacy:legacy-support-v4:${androidXVersion.legacySupport}"
    androidTestImplementation "androidx.annotation:annotation:${androidXVersion.annotations}"
    androidTestImplementation "androidx.test.ext:junit:${androidXTestVersion.junit}"
    androidTestImplementation "androidx.test:rules:${androidXTestVersion.rules}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${androidXTestVersion.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${androidXTestVersion.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${androidXTestVersion.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-web:${androidXTestVersion.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:${androidXTestVersion.espresso}"

    implementation "androidx.appcompat:appcompat:${androidXVersion.appCompat}"
    implementation "androidx.cardview:cardview:${androidXVersion.cardView}"
    implementation "com.google.android.material:material:${androidXVersion.material}"
    implementation "androidx.recyclerview:recyclerview:${androidXVersion.recyclerView}"
    implementation "androidx.legacy:legacy-support-v4:${androidXVersion.legacySupport}"
    implementation "androidx.annotation:annotation:${androidXVersion.annotations}"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbFlowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbFlowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbFlowVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    implementation "io.reactivex:rxjava:1.2.1"
    implementation "io.reactivex:rxandroid:1.2.1"
}
